= simple_form_for(trip,
                  builder: ValidatedFormBuilder,
                  is_form_submitted: errors.present?,
                  html: { class: "d-flex flex-column gap-2", "data-turbo": "true" }) do |f|
  = f.validated_input(:title,
                      get_formatted_errors(errors, :title),
                      class: "fw-semibold",
                      placeholder: "Enter the trip title...")

  = f.validated_input(:description,
                      get_formatted_errors(errors, :description),
                      class: "fw-semibold",
                      rows: 3,
                      placeholder: "Enter the trip description...")

  // The start_date and end_date are hidden fields, updated in the background by the date range picker
  = f.hidden_field(:start_date,
                   id: "start_date_input",
                   label: false,
                   placeholder: "Enter the trip start date...")

  = f.hidden_field(:end_date,
                   id: "end_date_input",
                   label: false,
                   placeholder: "Enter the trip end date...")

  = render("partials/datetime_picker", errors: errors)

  .d-flex.flex-column.mb-3
    = f.label("Trip location", class: "fw-semibold", for: "#trip-location-autocomplete")
    #trip-location-autocomplete.form-control-plaintext{ class: get_error_class_with(errors, :location) }
    .invalid-feedback
      = simple_format(get_formatted_errors(errors, :location), {}, wrapper_tag: "span")
    .valid-feedback
      Looks good!

  #map.my-1

  = f.hidden_field(:location_name,
                   id: "trip_location_name_input")

  = f.hidden_field(:location_latitude,
                   id: "trip_location_latitude_input")

  = f.hidden_field(:location_longitude,
                   id: "trip_location_longitude_input")

  .d-flex.justify-content-end.mt-1
    = button_tag(type: "submit", class: "btn btn-secondary fw-bold") do
      %i.bi.bi-send-fill
      &nbsp;
      Create Trip
