= simple_form_for([trip, plan],
                  builder: ValidatedFormBuilder,
                  errors: errors,
                  html: { class: "d-flex flex-column gap-2", "data-turbo": "true" }) do |f|
  = f.validated_input(:title,
                      placeholder: "Enter the title of the plan...")
  = f.validated_select(:plan_type,
                       options_for_select(Plan.plan_types.keys.map { |name| [name.humanize.titleize, name] },
                                          selected: plan.plan_type),
                       prompt: "Select plan type",
                       required: true)

  .d-flex.flex-column.mb-3
    = f.label("Start location", class: "mb-1", for: "#start-location-autocomplete")
    #start-location-autocomplete.form-control-plaintext{ class: get_error_class_with(errors, :start_location_name) }
    = form_error_message(errors, :start_location_name)
    .valid-feedback Looks good!

  #end-location-container.d-none.d-flex.flex-column.mb-3
    = f.label("End location", class: "mb-1", for: "#end-location-autocomplete")
    #end-location-autocomplete.form-control-plaintext{ class: get_error_class_with(errors, :end_location_name) }
    = form_error_message(errors, :end_location_name)
    .valid-feedback Looks good!

  #map

  = f.validated_datetime(:start_date, required: true)
  = f.validated_datetime(:end_date, required: true)

  = f.label("Scan QR Code", class: "mb-1", for: "#plan_qr_code")
  %canvas#qr-recreated.d-none;
  %p#qr-result.d-none;
  = f.file_field(:qr_code, accept: "image/*", class: "form-control")

  = f.button(:submit, "Save", class: "btn btn-primary fw-semibold")

  = f.hidden_field(:start_location_name,
                   id: "start_location_name_input")
  = f.hidden_field(:end_location_name,
                   id: "end_location_name_input")
  = f.hidden_field(:start_location_latitude,
                   id: "start_location_latitude_input")
  = f.hidden_field(:start_location_longitude,
                   id: "start_location_longitude_input")
  = f.hidden_field(:end_location_latitude,
                   id: "end_location_latitude_input")
  = f.hidden_field(:end_location_longitude,
                   id: "end_location_longitude_input")
